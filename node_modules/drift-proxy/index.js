var url = require('url');
const request = require('request')
const http = require("http");
const fs = require('fs');
var hbs = require('hbs')
const rewriter = require('./lib/rewriter.js')
var config = require('./app.json')

var proxyPath = config.prefix
const port = process.env.PORT || config.port

function getcookie(req, name) {
  const parseCookie = str =>
    str
      .split(';')
      .map(v => v.split('='))
      .reduce((acc, v) => {
        acc[decodeURIComponent(v[0].trim())] = decodeURIComponent(v[1].trim());

        return acc;
      }, {});

  var cookie = req.headers.cookie;
  cookie.toString()

  cookie = parseCookie(cookie)

  return cookie[name]
}

const requestListener = function(req, res) {
  var path = req.url.substr(0,proxyPath.length)
  
  if (path === proxyPath) {
    var proxyUrl = req.url.substr(proxyPath.length+1,req.url.length)
    
    proxyUrl = proxyUrl.replace("https:/", "")
    proxyUrl = proxyUrl.replace("http:/", "")

    proxyUrl = `https://${proxyUrl}`
    
    res.writeHead(200, {
        "Set-Cookie": `proxypath=${proxyPath};proxyUrl=${proxyUrl}`
    });
    
    var userAgent = "Mozilla/5.0 (X11; Linux x86_64; rv:7.0) Gecko/20101111 Firefox/85.02"
    var headers = { "User-Agent": userAgent }

    request({ url: proxyUrl, headers: headers }, function(error, response, body) {
      if (error) {
        res.end(error.toString())
      } else {
        //console.log(response.caseless.get('Content-Type'))
        if (!(typeof response.caseless.get('Content-Type') === "undefined")) {
          var contentType = response.caseless.get('Content-Type')
        } else {
          var contentType = "text/css"
        }

        if (!(typeof contentType === "undefined")) {
          res.writeHead(200,{
            'Content-Type': response.caseless.get('Content-Type')
          })
        } else {
          res.writeHead(200,{
            "Content-Type": 'text/css'
          })
        }

        if (contentType.includes("image")) {
          request({
            url: proxyUrl,
            headers: { "User-Agent": userAgent },
            encoding: null
          },
            (err, respond, buffer) => {
              res.writeHead(200,'Content-Type', contentType)
              if (err) {
                console.log(err)
                res.end(err)
              } else {
                res.end(Buffer.from(respond.body))
              }
            });
        } else {
          if (contentType.includes("html")) {
            res.end(rewriter.write(body, proxyUrl, response.caseless.get('Content-Type')));
          } else {
            res.end(rewriter.write(body, proxyUrl, response.caseless.get('Content-Type')))
          }
        }
      }
    });
  }
  
  if (req.url === "/content/js/onpage.js"){
    let script = fs.readFileSync('./lib/onpage.js')
    
    res.end(script)
  }
  
};

function run(){
  const server = http.createServer(requestListener);
  server.listen(8080)
}

module.exports = {
  run
}